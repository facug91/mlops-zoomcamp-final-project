services:

  minio:
    image: quay.io/minio/minio:RELEASE.2025-07-23T15-54-02Z
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"  # API S3
      - "9001:9001"  # Consola web
    volumes:
      - ./minio/data:/data
    command: ["server", "/data", "--console-address", "9001:9001"]

  mlflow:
    build:
      dockerfile: docker/Dockerfile-mlflow
      context: .
    container_name: mlflow-server
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=${MLFLOW_S3_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${MLFLOW_S3_SECRET_KEY}
    volumes:
      - ./mlflow:/mlruns
    ports:
      - "5000:5000"
    depends_on:
      - minio
    command: ["mlflow", "server", "--host", "0.0.0.0", "--port", "5000", "--backend-store-uri", "sqlite:////mlruns/mlruns.db", "--serve-artifacts","--default-artifact-root", "s3://mlflow-artifacts", "--artifacts-destination", "s3://mlflow-artifacts"]

  prefect:
    image: prefecthq/prefect:3.4.9-python3.12
    container_name: prefect-server
    ports:
      - "4200:4200"
    volumes:
      - ./prefect:/root/.prefect
    environment:
      - PREFECT_API_URL=http://localhost:4200/api
      - PREFECT_API_DATABASE_CONNECTION_URL=sqlite+aiosqlite:////root/.prefect/prefect.db
      - PREFECT_SERVER_UI_ENABLED=true
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_API_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED=false
    command: ["prefect", "server", "start"]
    profiles: ["dev"]

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=metricsdb
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  adminer:
    image: adminer:latest
    container_name: adminer
    ports:
      - "8081:8080"
    depends_on:
      - postgres

  ml-dev-env:
    build:
      dockerfile: Dockerfile
      context: ./docker/${ARCH}
      args:
        ENV: "dev"
    container_name: ml-dev-env-${ARCH}
    shm_size: '10gb'
    ports:
      - "8080:8080"    # Web Service
    restart: unless-stopped
    tty: true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    volumes:
      - ./workspace:/root/workspace
      - ./.bash_history:/root/.bash_history
    environment:
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - AWS_DEFAULT_REGION=us-east-1
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - TORCH_HOME=/root/workspace/torchvision/cache # torchvision cache folder for pre-trained models
      - PREFECT_API_URL=http://prefect:4200/api
    profiles: ["dev"]

  ml-prod-env:
    build:
      dockerfile: Dockerfile
      context: ./docker/${ARCH}
      args:
        ENV: "prod"
    container_name: ml-prod-env-${ARCH}
    shm_size: '10gb'
    ports:
      - "8080:8080"    # Web Service
    restart: unless-stopped
    tty: true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    volumes:
      - ./workspace:/root/workspace
      - ./.bash_history:/root/.bash_history
    environment:
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - AWS_DEFAULT_REGION=us-east-1
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - TORCH_HOME=/root/workspace/torchvision/cache # torchvision cache folder for pre-trained models
      - PREFECT_API_URL=http://prefect:4200/api
    profiles: ["prod"]
